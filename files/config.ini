# These min/max configuration values were found by rotating my sensor setup
# and dumping min/max values with the d key in magView.
compass.accelerometer.min=-243,-258,-284
compass.accelerometer.max=268,254,226
compass.magnetometer.min=-637,-456,-547
compass.magnetometer.max=611,733,598

# These gyro coefficients provide the linear equation (y=ax + b) which relates
# sensor temperature to its bias (drift).
compass.gyro.coefficient.A=0.0025,-0.0003,0.0026
compass.gyro.coefficient.B=48.138,7.5672,35.951

# These scale indicates LSBs (least significant bits) per degree.  They should
# be close to the 14.375 value from the ITG-3200 specification.
compass.gyro.scale=14.256,14.021,14.160

# Control the swizzle for each sensor (ie. map the x, y, z axis for each sensor
# to the x, y, z axis of the coordinate system we want to use for the output).
# For example: 3,-2,1 indicates that final x should be taken from the sensor's
#              z axis, the final y should be taken from the sensor's y axis but
#              after inverting its value, and the final z should be taken from
#              the sensor's x axis.
# This accounts for the fact that a robot might want to assume an x axis that
# is a different axis for the sensor itself and it also accounts for the
# scenario where each sensor (accelerometer, magnetometer, and gyro) has their
# axis aligned differently.
compass.accelerometer.swizzle=2,3,1
compass.magnetometer.swizzle=-1,3,2
compass.gyro.swizzle=2,3,1

# The initial P, Q and R covariance matrices for the Kalman filter are
# initialized with these values on the diagonal.
# P: The expected initial error in the model.
# Q: The expected variance the gyro measurements will have on the model's
#    quaternion during each iteration of the filter.
# R: The expected variance the accelerometer and magnetometer measurements
#    will have on the representative quaternion during each iteration of the
#    filter.
compass.initial.variance=1.0E-4
compass.gyro.variance=6.5E-11
compass.accelerometer.magnetometer.variance=1.0E-5

# This vector specifies the declination correction to be applied to
# convert magnetic north to true north.
# It can be calculated here: http://www.ngdc.noaa.gov/geomag-web/#declination
# The 3 element vector represents: degrees,minutes,seconds
compass.declinationCorrection=15,54,0

# Correct for how device is mounted on robot.
# The 3 element vector represents: degrees,minutes,seconds
compass.mountingCorrection=90,0,0
