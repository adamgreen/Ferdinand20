diff -Naur nrfSDK2/components/softdevice/s130/headers/nrf_svc.h nrfSDK/components/softdevice/s130/headers/nrf_svc.h
--- nrfSDK2/components/softdevice/s130/headers/nrf_svc.h	2016-04-20 15:57:06.000000000 -0700
+++ nrfSDK/components/softdevice/s130/headers/nrf_svc.h	2020-02-06 02:01:48.000000000 -0800
@@ -1,26 +1,26 @@
-/* 
+/*
  * Copyright (c) Nordic Semiconductor ASA
  * All rights reserved.
- * 
+ *
  * Redistribution and use in source and binary forms, with or without modification,
  * are permitted provided that the following conditions are met:
- * 
+ *
  *   1. Redistributions of source code must retain the above copyright notice, this
  *   list of conditions and the following disclaimer.
- * 
+ *
  *   2. Redistributions in binary form must reproduce the above copyright notice, this
  *   list of conditions and the following disclaimer in the documentation and/or
  *   other materials provided with the distribution.
- * 
+ *
  *   3. Neither the name of Nordic Semiconductor ASA nor the names of other
  *   contributors to this software may be used to endorse or promote products
  *   derived from this software without specific prior written permission.
- * 
+ *
  *   4. This software must only be used in a processor manufactured by Nordic
  *   Semiconductor ASA, or in a processor manufactured by a third party that
  *   is used in combination with a processor manufactured by Nordic Semiconductor.
- * 
- * 
+ *
+ *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
@@ -31,9 +31,9 @@
  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- * 
+ *
  */
- 
+
 #ifndef NRF_SVC__
 #define NRF_SVC__
 
@@ -42,7 +42,7 @@
 #ifdef __cplusplus
 extern "C" {
 #endif
-    
+
 #ifdef SVCALL_AS_NORMAL_FUNCTION
 #define SVCALL(number, return_type, signature) return_type signature
 #else
@@ -52,9 +52,9 @@
 #define SVCALL(number, return_type, signature) return_type __svc(number) signature
 #elif defined (__GNUC__)
 #ifdef __cplusplus
-#define GCC_CAST_CPP (uint8_t)
+#define GCC_CAST_CPP (uint16_t)
 #else
-#define GCC_CAST_CPP    
+#define GCC_CAST_CPP
 #endif
 #define SVCALL(number, return_type, signature)          \
   _Pragma("GCC diagnostic push")                        \
@@ -69,14 +69,14 @@
     );                                                  \
   }                                                     \
   _Pragma("GCC diagnostic pop")
-  
+
 #elif defined (__ICCARM__)
 #define PRAGMA(x) _Pragma(#x)
 #define SVCALL(number, return_type, signature)          \
 PRAGMA(swi_number = (number))                           \
  __swi return_type signature;
 #else
-#define SVCALL(number, return_type, signature) return_type signature  
+#define SVCALL(number, return_type, signature) return_type signature
 #endif
 #endif  // SVCALL
 
diff -Naur nrfSDK2/components/toolchain/gcc/Makefile.common nrfSDK/components/toolchain/gcc/Makefile.common
--- nrfSDK2/components/toolchain/gcc/Makefile.common	2017-05-05 13:10:30.000000000 -0700
+++ nrfSDK/components/toolchain/gcc/Makefile.common	2020-02-05 21:01:46.000000000 -0800
@@ -154,6 +154,7 @@
 	$(NO_ECHO)$(DUMP_FILE_LIST) > $(@:.out=.in)
 	@echo Linking target: $@
 	$(NO_ECHO)$(CC) -Wl,-Map=$(@:.out=.map) $(LDFLAGS) @$(@:.out=.in) -lm -o $@
+	$(NO_ECHO)$(OBJDUMP) -d -f -M reg-names-std --demangle $@ > $(@:.out=.disasm)
 	-@echo ''
 	$(NO_ECHO)$(SIZE) $@
 	-@echo ''
diff -Naur nrfSDK2/components/toolchain/gcc/Makefile.posix nrfSDK/components/toolchain/gcc/Makefile.posix
--- nrfSDK2/components/toolchain/gcc/Makefile.posix	2017-05-05 13:10:30.000000000 -0700
+++ nrfSDK/components/toolchain/gcc/Makefile.posix	2020-02-05 21:01:46.000000000 -0800
@@ -1,3 +1,3 @@
-GNU_INSTALL_ROOT := /usr/local/gcc-arm-none-eabi-4_9-2015q3
-GNU_VERSION := 4.9.3
+GNU_INSTALL_ROOT := $(patsubst %/bin/,%,$(dir $(shell which arm-none-eabi-gcc)))
+GNU_VERSION := 7.3.1
 GNU_PREFIX := arm-none-eabi
